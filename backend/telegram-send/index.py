import json
import os
import urllib.request
import urllib.parse
from typing import Dict, Any

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: Send quiz results and order requests to Telegram
    Args: event with httpMethod, body containing message data
    Returns: HTTP response with success/error status
    '''
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Method not allowed'})
        }
    
    bot_token = os.environ.get('TELEGRAM_BOT_TOKEN')
    chat_id = os.environ.get('TELEGRAM_CHAT_ID')
    
    if not bot_token or not chat_id:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Telegram credentials not configured'})
        }
    
    body_data = json.loads(event.get('body', '{}'))
    message_type = body_data.get('type', 'order')
    
    if message_type == 'quiz':
        answers = body_data.get('answers', [])
        message = "üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–≤–∏–∑–∞!\n\n"
        
        questions_map = {
            0: "–ö–∞–∫—É—é –∏–∫—Ä—É –∏—â–µ—Ç",
            1: "–ü–æ–≤–æ–¥ –ø–æ–∫—É–ø–∫–∏",
            2: "–ë—é–¥–∂–µ—Ç –Ω–∞ –∫–≥",
            3: "–í–∫—É—Å–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è",
            4: "–†–∞–∑–º–µ—Ä –∏–∫—Ä–∏–Ω–æ–∫",
            5: "–û–±—ä–µ–º –ø–æ–∫—É–ø–∫–∏",
            6: "–û–ø—ã—Ç —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"
        }
        
        for ans in answers:
            q_num = ans.get('question', 0)
            q_text = questions_map.get(q_num, f"–í–æ–ø—Ä–æ—Å {q_num + 1}")
            message += f"‚Ä¢ {q_text}: {ans.get('answer', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        
        if body_data.get('recommendation'):
            message += f"\n‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {body_data['recommendation']}"
        
        if body_data.get('contact'):
            message += f"\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: {body_data['contact']}"
    
    elif message_type == 'order':
        message = "üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n"
        
        if body_data.get('products'):
            message += "–¢–æ–≤–∞—Ä—ã:\n"
            for prod in body_data['products']:
                message += f"‚Ä¢ {prod.get('name', '–¢–æ–≤–∞—Ä')} - {prod.get('quantity', 1)} —à—Ç. ({prod.get('price', 0)} ‚ÇΩ)\n"
        
        if body_data.get('total'):
            message += f"\nüí∞ –ò—Ç–æ–≥–æ: {body_data['total']} ‚ÇΩ"
        
        if body_data.get('contact'):
            message += f"\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: {body_data['contact']}"
        
        if body_data.get('delivery'):
            message += f"\nüöö –î–æ—Å—Ç–∞–≤–∫–∞: {body_data['delivery']}"
    
    elif message_type == 'contact':
        message = "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!\n\n"
        
        if body_data.get('name'):
            message += f"–ò–º—è: {body_data['name']}\n"
        if body_data.get('phone'):
            message += f"–¢–µ–ª–µ—Ñ–æ–Ω: {body_data['phone']}\n"
        if body_data.get('email'):
            message += f"Email: {body_data['email']}\n"
        if body_data.get('comment'):
            message += f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {body_data['comment']}\n"
    
    else:
        message = body_data.get('message', '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'HTML'
    }
    
    data = urllib.parse.urlencode(payload).encode('utf-8')
    req = urllib.request.Request(url, data=data, method='POST')
    req.add_header('Content-Type', 'application/x-www-form-urlencoded')
    
    try:
        with urllib.request.urlopen(req) as response:
            result = json.loads(response.read().decode('utf-8'))
            
            if result.get('ok'):
                return {
                    'statusCode': 200,
                    'headers': {
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    },
                    'body': json.dumps({'success': True, 'message': 'Sent to Telegram'})
                }
            else:
                return {
                    'statusCode': 500,
                    'headers': {
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    },
                    'body': json.dumps({'error': 'Telegram API error', 'details': result})
                }
    
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': str(e)})
        }
